// <auto-generated />
using System;
using LogicaAccesoDatos.Repo;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LogicaAccesoDatos.Migrations
{
    [DbContext(typeof(ProyContext))]
    [Migration("20230506191636_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LogicaNegocio.Entidades.Cabana", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CantPersMax")
                        .HasColumnType("int");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Foto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HayJacuzzi")
                        .HasColumnType("bit");

                    b.Property<bool>("HayReserva")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumHabitacion")
                        .HasColumnType("int");

                    b.Property<int>("TipoCabId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoCabId");

                    b.ToTable("Cabanas");
                });

            modelBuilder.Entity("LogicaNegocio.Entidades.Mantenimiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CabanaId")
                        .HasColumnType("int");

                    b.Property<int>("Costo")
                        .HasColumnType("int");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Tecnico")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CabanaId");

                    b.ToTable("Mantenimientos");
                });

            modelBuilder.Entity("LogicaNegocio.Entidades.TipoCab", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CostoP")
                        .HasColumnType("int");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoCabs");
                });

            modelBuilder.Entity("LogicaNegocio.Entidades.Cabana", b =>
                {
                    b.HasOne("LogicaNegocio.Entidades.TipoCab", "TipoCab")
                        .WithMany("cabanas")
                        .HasForeignKey("TipoCabId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoCab");
                });

            modelBuilder.Entity("LogicaNegocio.Entidades.Mantenimiento", b =>
                {
                    b.HasOne("LogicaNegocio.Entidades.Cabana", "Cabana")
                        .WithMany("mantenimientos")
                        .HasForeignKey("CabanaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cabana");
                });

            modelBuilder.Entity("LogicaNegocio.Entidades.Cabana", b =>
                {
                    b.Navigation("mantenimientos");
                });

            modelBuilder.Entity("LogicaNegocio.Entidades.TipoCab", b =>
                {
                    b.Navigation("cabanas");
                });
#pragma warning restore 612, 618
        }
    }
}
